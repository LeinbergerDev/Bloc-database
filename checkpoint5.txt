1) Write out a generic SELECT statement.
    SELECT <column1, column2, column3>
    FROM <talbe1, table2>
    WHERE <conditional>;
    ---------------------
    SELECT * FROM <table_name>;

2) Create a fun way to remember the order of operations in a SELECT statement, such as a mnemonic.
    SELECT FROM WHERE
    SOME FORGET WHEN

3) Given this dogs table, write queries to select the following pieces of data:
    Display the name, gender, and age of all dogs that are part Labrador.
        SELECT name, gender, age
        FROM dogs
        WHERE breed LIKE '%labrador%';
         name  | gender | age 
        --------+--------+-----
        Boujee | F      |   3
        Marley | M      |   0

    Display the ids of all dogs that are under 1 year old.
        SELECT id 
        FROM dogs
        WHERE age < 1;
        
          id   
        -------
        10002
        10004
        
    Display the name and age of all dogs that are female and over 35lbs.
        SELECT name, age 
        FROM dogs
        WHERE weight > 35
        AND gender = 'F';
          name  | age 
        --------+-----
        Boujee |   3

    Display all of the information about all dogs that are not Shepherd mixes.
        SELECT *
        FROM dogs
        WHERE breed NOT LIKE '%shepherd%';
          id   |   name    | gender | age | weight |       breed        | intake_date | in_foster  
        -------+-----------+--------+-----+--------+--------------------+-------------+------------
        10001 | Boujee    | F      |   3 |     36 | labrador poodle    | 2017-06-22  | 
        10002 | Munchkin  | F      |   0 |      8 | dachsund chihuahua | 2017-01-13  | 2017-01-31
        10004 | Marley    | M      |   0 |     10 | labrador           | 2017-05-04  | 2016-06-20
        10006 | Marmaduke | M      |   7 |    150 | great dane         | 2016-03-22  | 2016-05-15
        10007 | Rosco     | M      |   5 |    180 | rottweiler         | 2017-04-01  | 

    Display the id, age, weight, and breed of all dogs that are either over 60lbs or Great Danes.
        SELECT id, age, weight, breed
        FROM dogs
        WHERE weight > 60
        OR breed='great dane';

          id   | age | weight |   breed    
        -------+-----+--------+------------
        10006 |   7 |    150 | great dane
        10007 |   5 |    180 | rottweiler

    Intake teams typically guess the breed of shelter dogs, so the breed column may have multiple words (for example, "Labrador Collie mix").

    Given this cats table, what records are returned from these queries?
        SELECT name, adoption_date FROM cats;

           name   | adoption_date 
        ----------+---------------
        Mushi    | 2016-03-22
        Seashell | 
        Azul     | 2016-04-17
        Victoire | 2016-09-01
        Nala     | 

        SELECT name, age FROM cats;
           name   | age 
        ----------+-----
        Mushi    |   1
        Seashell |   7
        Azul     |   3
        Victoire |   7
        Nala     |   1
    From the cats table, write queries to select the following pieces of data.

        Display all the information about all of the available cats.
        SELECT *
        FROM cats
        WHERE adoption_date IS NULL;

         id |   name   | gender | age | intake_date | adoption_date 
        ----+----------+--------+-----+-------------+---------------
        2 | Seashell | F      |   7 | 2016-01-09  | 
        5 | Nala     | F      |   1 | 2016-01-12  | 

        Display the name and sex of all cats who are 7 years old.

        SELECT name, gender 
        FROM cats
        where age=7;

           name   | gender 
        ----------+--------
        Seashell | F
        Victoire | M

        Find all of the names of the cats, so you don’t choose duplicate names for new cats.
        
        SELECT name FROM cats;

           name   
        ----------
        Mushi
        Seashell
        Azul
        Victoire
        Nala

    List each comparison operator and explain, in your own words, when you would use it. Include a real world example for each.
        < less than: is true if the value is less than the conditional value. Buy the object if the cost is less than $2.99.
        > greater than: Is true if the value is greater than the conditional value.  Do not buy the object if it is greater than $3.00.
        <= less than or equal to: Is true if the value is less than or equal to the conditional value.  Buy the object if is costs $2.99 or less.
        >= greater than or equal to: Is true if the value is greater than or equal to the conditional value. Do not buy the object if it is $2.99 or more.
        != or <> not equal to: Is true if the value is not equal to the condition value.  Find all people who currently are NOT working.
        = equal to: Is true if the value is equal to the condition value.  Find the user with the email account equal to "Jason@leinbergerdev.com".

        If you can’t list these from memory, do these flashcards until you can!
    From the cats table, what data is returned from these queries?
        SELECT name FROM cats WHERE gender = ‘F’;
        
           name   
        ----------
        Seashell
        Nala

        SELECT name FROM cats WHERE age <> 3;

           name   
        ----------
        Mushi
        Seashell
        Victoire
        Nala

        SELECT id FROM cats WHERE name != ‘Mushi’ AND gender = ‘M’;
         id 
        ----
        3
        4
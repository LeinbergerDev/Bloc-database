1) List the commands for adding, updating, and deleting data. 
    Adding data:  
    INSERT INTO <table_name> (<column_1_name>, <column_2_name>)  
        VALUES  
        (<value_for_column_1>, <value_for_column_2>); 
    
    Updating data: 
        UPDATE <table_name> SET <column_name>=value WHERE  
        <column_name>=<value>; 
        
    Deleting data: 
        DELETE FROM <table_name> WHERE <column_name>=<value> 

2) Explain the structure for each type of command. 

    Adding data: 
        INSERT INTO is the statement defining the insert command 
        <table_name> is the name of the table to insert the data into. 
        (<column_1_name>, <column_2_name>) is a list of column names.  Pay attention to the order of this list because you have to enter the values for each column in the correct index in the values list. 
        VALUES statement indicating the beginning of the value list. 
        (<value_for_column_1>, <value_for_column_2>)  This is the list of values. Each item in this list is one row in the database.  You can add multiple rows to a database by placing a comma after the closing ).  

    Updating data: 
        UPDATE is the sql statement defining the update command. 
        <table_name> is the table containing the data to update. 
        SET is the SQL statement that indicates the beginning on the SET list 
        <column_name>=<value> You can set the value of a single column or multiple columns by separating this list with a comma. 
        WHERE is an SQL statement indicating the beginning of a conditional. 
        <column_name>=<value>; This is the conditional.  The database will only update the column’s data if this conditional resolves to true.  You can create conditionals using and/or so that multiple columns can be used in your conditional 

    Deleting data: 
    DELETE statement defining a the delete command. 
    FROM <table_name> the FROM sets the table to delete the data from. 
    WHERE indicates the beginning of the conditional for the delete statement. 
    <column_name>=<value> This is the conditional.  The database will only update the column’s data if this conditional resolves to true.  You can create conditionals using and/or so that multiple columns can be used in your conditional 
3) What are some the data types that can be used in tables? Give a real world example of each. 
    Int: Used to store whole numbers such as a person’s age or a vehicle’s model year. 
    Varchar(n): Used to store a string that cannot exceed n characters. 
    Numeric(precision, scale) For the numeric datatype the precision is the total number of digits and the scale is the total number of digits on the right side of the decimal point. Money is a real world item that could be stored in this datatype. 
    Text: this datatype stores a string of unlimited length. Articles or books could be stored in a text datatype. 

4) Think through how to create a new table to hold a list of people invited to a wedding. This table needs to have first and last name, whether they sent in their RSVP, the number of guests they are bringing, and the number of meals (1 for adults and 1/2 for children).

    Which data type would you use to store each of the following pieces of information?
        First and last name.
        Whether they sent in their RSVP.
        Number of guests.
        Number of meals.
    Write a command that makes the table to track the wedding.
    
    Using the table we just created, write a command that adds a column to track whether they were sent a thank you card.
    
    You have decided to move the data about the meals to another table, so write a command to remove the column storing the number meals from the wedding table.
    
    The guests are going to need a place to sit at the reception, so write a command that adds a column for table number.
    
    The wedding is over and we do not need to keep this information, so write a command that deletes the wedding table from the database.


CREATE TABLE wedding ( 
id int, 
first_name varchar(100), 
last_name varchar(100), 
rsvp boolean, 
guests int, 
meals numeric(3,1)
); 
_____________________________________________________

                                            Table "public.wedding"
   Column   |          Type          | Collation | Nullable | Default | Storage  | Stats target | Description 
------------+------------------------+-----------+----------+---------+----------+--------------+-------------
 id         | integer                |           |          |         | plain    |              | 
 first_name | character varying(100) |           |          |         | extended |              | 
 last_name  | character varying(100) |           |          |         | extended |              | 
 rsvp       | boolean                |           |          |         | plain    |              | 
 guests     | integer                |           |          |         | plain    |              | 
 meals      | numeric(3,1)           |           |          |         | main     |              | 

_____________________________________________________
ALTER TABLE wedding ADD COLUMN thankyou boolean DEFAULT false; 

                                            Table "public.wedding"
   Column   |          Type          | Collation | Nullable | Default | Storage  | Stats target | Description 
------------+------------------------+-----------+----------+---------+----------+--------------+-------------
 id         | integer                |           |          |         | plain    |              | 
 first_name | character varying(100) |           |          |         | extended |              | 
 last_name  | character varying(100) |           |          |         | extended |              | 
 rsvp       | boolean                |           |          |         | plain    |              | 
 guests     | integer                |           |          |         | plain    |              | 
 meals      | numeric(3,1)           |           |          |         | main     |              | 
 thankyou   | boolean                |           |          | false   | plain    |              | 

ALTER TABLE wedding DROP COLUMN meals; 

                                            Table "public.wedding"
   Column   |          Type          | Collation | Nullable | Default | Storage  | Stats target | Description 
------------+------------------------+-----------+----------+---------+----------+--------------+-------------
 id         | integer                |           |          |         | plain    |              | 
 first_name | character varying(100) |           |          |         | extended |              | 
 last_name  | character varying(100) |           |          |         | extended |              | 
 rsvp       | boolean                |           |          |         | plain    |              | 
 guests     | integer                |           |          |         | plain    |              | 
 thankyou   | boolean                |           |          | false   | plain    |              | 

ALTER TABLE wedding ADD COLUMN table_number int DEFAULT 0;

                                             Table "public.wedding"
    Column    |          Type          | Collation | Nullable | Default | Storage  | Stats target | Description 
--------------+------------------------+-----------+----------+---------+----------+--------------+-------------
 id           | integer                |           |          |         | plain    |              | 
 first_name   | character varying(100) |           |          |         | extended |              | 
 last_name    | character varying(100) |           |          |         | extended |              | 
 rsvp         | boolean                |           |          |         | plain    |              | 
 guests       | integer                |           |          |         | plain    |              | 
 thankyou     | boolean                |           |          | false   | plain    |              | 
 table_number | integer                |           |          | 0       | plain    |              | 

DROP TABLE wedding; 

5) Write a command to make a new table to hold the books in a library with the 
columns ISBN, title, author, genre, publishing date, number of copies, and available copies.

    Find three books and add their information to the table.
    Someone has just checked out one of the books. Change the available copies column to 1 fewer.
    Now one of the books has been added to the banned books list. Remove it from the table.

CREATE TABLE books (
    ISBN bigint,
    title text,
    author text,
    genre text,
    publishing_date date,
    copies int,
    copies_available int
);
      Column      |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description 
------------------+---------+-----------+----------+---------+----------+--------------+-------------
 isbn             | bigint  |           |          |         | plain    |              | 
 title            | text    |           |          |         | extended |              | 
 author           | text    |           |          |         | extended |              | 
 genre            | text    |           |          |         | extended |              | 
 publishing_date  | date    |           |          |         | plain    |              | 
 copies           | integer |           |          |         | plain    |              | 
 copies_available | integer |           |          |         | plain    |              | 

INSERT INTO books (ISBN, title, author, genre, publishing_date, copies, copies_available)
VALUES
(9780132350884, 'Clean Code: A Handbook of Agile Software Craftsmanship', 'Robert C. Martin', 'technology', '08/15/2008', 3, 3 ),
(9780321714633, 'The Ruby Way: Solutions and Techniques in Ruby Programming', 'Hal Fulton, Andre Arko', 'technology', '03/16/2015', 3, 3 ),
(9780134657677, 'The Rails 5 Way', 'Obie Fernandez, Kevin Faustino', 'technology', '11/28/2017', 3, 3);

     isbn      |                           title                            |             author             |   genre    | publishing_date | copies | copies_available 
---------------+------------------------------------------------------------+--------------------------------+------------+-----------------+--------+------------------
 9780132350884 | Clean Code: A Handbook of Agile Software Craftsmanship     | Robert C. Martin               | technology | 2008-08-15      |      3 |                3
 9780321714633 | The Ruby Way: Solutions and Techniques in Ruby Programming | Hal Fulton, Andre Arko         | technology | 2015-03-16      |      3 |                3
 9780134657677 | The Rails 5 Way                                            | Obie Fernandez, Kevin Faustino | technology | 2017-11-28      |      3 |                3

 UPDATE books SET copies_available=2 where isbn=9780132350884;

      isbn      |                           title                            |             author             |   genre    | publishing_date | copies | copies_available 
---------------+------------------------------------------------------------+--------------------------------+------------+-----------------+--------+------------------
 9780321714633 | The Ruby Way: Solutions and Techniques in Ruby Programming | Hal Fulton, Andre Arko         | technology | 2015-03-16      |      3 |                3
 9780134657677 | The Rails 5 Way                                            | Obie Fernandez, Kevin Faustino | technology | 2017-11-28      |      3 |                3
 9780132350884 | Clean Code: A Handbook of Agile Software Craftsmanship     | Robert C. Martin               | technology | 2008-08-15      |      3 |                2

 DELETE FROM books WHERE isbn=9780321714633;

     isbn      |                         title                          |             author             |   genre    | publishing_date | copies | copies_available 
---------------+--------------------------------------------------------+--------------------------------+------------+-----------------+--------+------------------
 9780134657677 | The Rails 5 Way                                        | Obie Fernandez, Kevin Faustino | technology | 2017-11-28      |      3 |                3
 9780132350884 | Clean Code: A Handbook of Agile Software Craftsmanship | Robert C. Martin               | technology | 2008-08-15      |      3 |                2

6) Write a command to make a new table to hold spacecrafts. 
Information should include id, name, year launched, country of origin, a brief description of the mission, 
orbiting body, if it is currently operating, and approximate miles from Earth. 
In addition to the table creation, provide commands that perform the following operations:

    Add 3 non-Earth-orbiting satellites to the table.
    Remove one of the satellites from the table since it has just been crashed into the planet.
    Edit another satellite because it is no longer operating and change the value to reflect that.

CREATE TABLE spacecrafts (
    id int,
    name text,
    launch_year int,
    origin text,
    mission text,
    orbiting_body text,
    operational boolean,
    distance bigint
);

                                    Table "public.spacecrafts"
    Column     |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description 
---------------+---------+-----------+----------+---------+----------+--------------+-------------
 id            | integer |           |          |         | plain    |              | 
 name          | text    |           |          |         | extended |              | 
 launch_year   | integer |           |          |         | plain    |              | 
 origin        | text    |           |          |         | extended |              | 
 mission       | text    |           |          |         | extended |              | 
 orbiting_body | text    |           |          |         | extended |              | 
 operational   | boolean |           |          |         | plain    |              | 
 distance      | bigint  |           |          |         | plain    |              | 


INSERT INTO spacecrafts (id, name, launch_year, origin, mission, orbiting_body, operational, distance)
values
(1, 'mars 1', 2016, 'USA', 'topographic survey of mars', 'Mars', true, 33900000),
(2, 'venus 1', 2014, 'USA', 'topographic survey of venus', 'Venus', true, 162000000),
(3, 'moon 1', 2000, 'USA', 'weaponize the moon', 'Moon', true, 238900);

 id |  name   | launch_year | origin |           mission           | orbiting_body | operational | distance  
----+---------+-------------+--------+-----------------------------+---------------+-------------+-----------
  1 | mars 1  |        2016 | USA    | topographic survey of mars  | Mars          | t           |  33900000
  2 | venus 1 |        2014 | USA    | topographic survey of venus | Venus         | t           | 162000000
  3 | moon 1  |        2000 | USA    | weaponize the moon          | Moon          | t           |    238900

DELETE FROM spacecrafts WHERE id=2;

 id |  name  | launch_year | origin |          mission           | orbiting_body | operational | distance 
----+--------+-------------+--------+----------------------------+---------------+-------------+----------
  1 | mars 1 |        2016 | USA    | topographic survey of mars | Mars          | t           | 33900000
  3 | moon 1 |        2000 | USA    | weaponize the moon         | Moon          | t           |   238900

UPDATE spacecrafts SET operational=false WHERE id=3;

 id |  name  | launch_year | origin |          mission           | orbiting_body | operational | distance 
----+--------+-------------+--------+----------------------------+---------------+-------------+----------
  1 | mars 1 |        2016 | USA    | topographic survey of mars | Mars          | t           | 33900000
  3 | moon 1 |        2000 | USA    | weaponize the moon         | Moon          | f           |   238900

7)  Write a command to make a new table to hold the emails in your inbox. 
    This table should include an id, the subject line, the sender, any additional recipients, 
    the body of the email, the timestamp, whether or not it’s been read, 
    and the id of the email chain it’s in. Also provide commands that perform the following operations:

    Add 3 new emails to the inbox.
    You’ve just deleted one of the emails, so write a command to remove the row from the inbox table.
    You started reading an email but just heard a crash in another room. 
    Mark the email as unread before investigating, so you can come back to it later.

CREATE TABLE emails (
    id int, 
    subject text,
    sender text,
    recipients text,
    body text,
    timestamp timestamp,
    read boolean,
    email_chain int
);

                           Table "public.emails"
   Column    |            Type             | Collation | Nullable | Default 
-------------+-----------------------------+-----------+----------+---------
 id          | integer                     |           |          | 
 subject     | text                        |           |          | 
 sender      | text                        |           |          | 
 recipients  | text                        |           |          | 
 body        | text                        |           |          | 
 timestamp   | timestamp without time zone |           |          | 
 read        | boolean                     |           |          | 
 email_chain | integer                     |           |          | 

INSERT INTO emails (id, subject, sender, recipients, body, timestamp, read, email_chain)
VALUES 
(1, 'email_subject', 'billy@bubba.com', 'bob@bubba.com', 'hi billy, how are you doing?', '2016-06-22 19:10:25-07', false, 0),
(2, 'reply_email_subject', 'bob@bubba.com', 'billy@bubba.com', 'Good Bob, you?', '2016-06-22 19:10:30-07', false, 0),
(3, 'email_subject', 'momma@bubba.com', 'billy@bubba.com, bob@bubba.com', 'You boys get back to work!!!', '2016-06-22 19:10:31-07', false, 0);

 id |       subject       |     sender      |           recipients           |             body             |      timestamp      | read | email_chain 
----+---------------------+-----------------+--------------------------------+------------------------------+---------------------+------+-------------
  1 | email_subject       | billy@bubba.com | bob@bubba.com                  | hi billy, how are you doing? | 2016-06-22 19:10:25 | f    |           0
  2 | reply_email_subject | bob@bubba.com   | billy@bubba.com                | Good Bob, you?               | 2016-06-22 19:10:30 | f    |           0
  3 | email_subject       | momma@bubba.com | billy@bubba.com, bob@bubba.com | You boys get back to work!!! | 2016-06-22 19:10:31 | f    |           0

DELETE FROM emails WHERE id=2;

 id |    subject    |     sender      |           recipients           |             body             |      timestamp      | read | email_chain 
----+---------------+-----------------+--------------------------------+------------------------------+---------------------+------+-------------
  1 | email_subject | billy@bubba.com | bob@bubba.com                  | hi billy, how are you doing? | 2016-06-22 19:10:25 | f    |           0
  3 | email_subject | momma@bubba.com | billy@bubba.com, bob@bubba.com | You boys get back to work!!! | 2016-06-22 19:10:31 | f    |           0

UPDATE emails SET read=true WHERE id=3;

 id |    subject    |     sender      |           recipients           |             body             |      timestamp      | read | email_chain 
----+---------------+-----------------+--------------------------------+------------------------------+---------------------+------+-------------
  1 | email_subject | billy@bubba.com | bob@bubba.com                  | hi billy, how are you doing? | 2016-06-22 19:10:25 | f    |           0
  3 | email_subject | momma@bubba.com | billy@bubba.com, bob@bubba.com | You boys get back to work!!! | 2016-06-22 19:10:31 | t    |           0

UPDATE emails SET read=false WHERE id=3;

 id |    subject    |     sender      |           recipients           |             body             |      timestamp      | read | email_chain 
----+---------------+-----------------+--------------------------------+------------------------------+---------------------+------+-------------
  1 | email_subject | billy@bubba.com | bob@bubba.com                  | hi billy, how are you doing? | 2016-06-22 19:10:25 | f    |           0
  3 | email_subject | momma@bubba.com | billy@bubba.com, bob@bubba.com | You boys get back to work!!! | 2016-06-22 19:10:31 | f    |           0
  